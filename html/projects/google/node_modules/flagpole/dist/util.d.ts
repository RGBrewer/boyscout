import { iMessageAndCallback, IteratorCallback } from "./interfaces";
export declare function isNullOrUndefined(obj: any): boolean;
export declare function isAsyncCallback(func: Function): boolean;
export declare function toType(obj: any): string;
export declare function uniqueId(): string;
export declare function openInBrowser(content: string): Promise<string>;
export declare function runAsync(callback: Function, delay?: number): void;
export declare function asyncForEach(array: any[], callback: IteratorCallback): Promise<void>;
export declare function asyncEvery(array: any[], callback: IteratorCallback): Promise<boolean>;
export declare function asyncEvery2(array: any[], callback: Function): Promise<boolean>;
export declare function asyncNone(array: any[], callback: IteratorCallback): Promise<boolean>;
export declare function asyncNone2(array: any[], callback: Function): Promise<boolean>;
export declare function asyncSome(array: any[], callback: IteratorCallback): Promise<boolean>;
export declare function asyncSome2(array: any[], callback: Function): Promise<boolean>;
export declare function normalizePath(uri: string): string;
export declare function ensureFolderExists(path: string): void;
export declare function emptyFolder(folderPath: string): Promise<void>;
export declare function exitProcess(passed: boolean): void;
export declare function getMessageAndCallbackFromOverloading(a: any, b: any, defaultMessage?: string): iMessageAndCallback;
