"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cli_helper_1 = require("./cli-helper");
const cli_1 = require("./cli");
function list(suite = []) {
    cli_1.Cli.hideBanner = true;
    if (cli_1.Cli.commandArg == "env") {
        cli_helper_1.printHeader();
        cli_helper_1.printSubheader("List Environments");
        cli_1.Cli.log("");
        let envNames = cli_1.Cli.config.getEnvironmentNames();
        if (envNames.length > 0) {
            cli_1.Cli.log("Found these environments:");
            cli_1.Cli.list(envNames);
            cli_1.Cli.log("\n");
            cli_1.Cli.exit(0);
        }
        else {
            cli_1.Cli.log("Did not find any environments.\n");
            cli_1.Cli.exit(2);
        }
    }
    else if (cli_1.Cli.commandArg == "tags") {
        cli_helper_1.printHeader();
        cli_helper_1.printSubheader("List Tags");
        cli_1.Cli.log("");
        let tags = cli_1.Cli.config.getTags();
        if (tags.length > 0) {
            cli_1.Cli.log("Found these tags:");
            cli_1.Cli.list(tags);
            cli_1.Cli.log("\n");
            cli_1.Cli.exit(0);
        }
        else {
            cli_1.Cli.log("Did not find any tags.\n");
            cli_1.Cli.exit(2);
        }
    }
    else {
        cli_helper_1.printHeader();
        cli_helper_1.printSubheader("List Suites");
        cli_1.Cli.log("Looking in folder: " + cli_1.Cli.config.getTestsFolder());
        cli_1.Cli.log("");
        let suiteNames = cli_1.Cli.config.getSuiteNames();
        if (suiteNames.length > 0) {
            cli_1.Cli.log("Found these test suites:");
            cli_1.Cli.list(suiteNames);
            cli_1.Cli.log("\n");
            cli_1.Cli.exit(0);
        }
        else {
            cli_1.Cli.log("Did not find any test suites.\n");
            cli_1.Cli.exit(2);
        }
    }
}
exports.list = list;
//# sourceMappingURL=list.js.map